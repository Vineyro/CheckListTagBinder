package llc.arma.checklisttag.ui.ble;import android.content.Context;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.databinding.DataBindingUtil;import androidx.fragment.app.Fragment;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProvider;import llc.arma.checklisttag.Event;import llc.arma.checklisttag.R;import llc.arma.checklisttag.data.Ble;import llc.arma.checklisttag.databinding.BleFragmentBinding;public class BleFragment extends Fragment implements BleActionsListener{    private BleAdapter bleAdapter;    private BleFragmentBinding binding;    private BleViewModel model;    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        bleAdapter = new BleAdapter(this);    }    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,                             @Nullable Bundle savedInstanceState) {        binding = DataBindingUtil.inflate(inflater, R.layout.ble_fragment, container,                false);        binding.setLifecycleOwner(getViewLifecycleOwner());        binding.setModel(model);        return binding.getRoot();    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        binding.getRoot().setOnApplyWindowInsetsListener((v, insets) -> {            binding.getRoot().setPadding(insets.getSystemWindowInsetLeft(),                    insets.getSystemWindowInsetTop(),                    insets.getSystemWindowInsetRight(),                    insets.getSystemWindowInsetBottom());            return insets;        });        binding.bleRecycler.setAdapter(bleAdapter);        binding.bleRecycler.setItemAnimator(null);        model.start(requireArguments().getString("sid"));        model.getCloseEvent().observe(getViewLifecycleOwner(), event -> {            if(event.isHandled()){                requireActivity().getSupportFragmentManager()                        .setFragmentResult("bleSelectResult", event.getContent());                requireActivity().onBackPressed();            }        });        model.getBleList().observe(getViewLifecycleOwner(), value -> {            bleAdapter.setItems(value);        });    }    @Override    public void onAttach(@NonNull Context context) {        super.onAttach(context);        model = new ViewModelProvider(this).get(BleViewModel.class);    }    @Override    public void onBleClicked(Ble ble) {        model.onBleClicked(ble);    }}