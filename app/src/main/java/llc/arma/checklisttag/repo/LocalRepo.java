package llc.arma.checklisttag.repo;import org.jetbrains.annotations.NotNull;import java.util.List;import java.util.concurrent.Executors;import androidx.lifecycle.LiveData;import androidx.paging.DataSource;import llc.arma.checklisttag.data.Tag;import llc.arma.checklisttag.db.AppDatabase;import llc.arma.checklisttag.db.entity.Object;import llc.arma.checklisttag.db.entity.Reg;import llc.arma.checklisttag.db.entity.Value;import llc.arma.checklisttag.db.model.SmartObject;public class LocalRepo {    private final AppDatabase appDatabase;    public LocalRepo(AppDatabase appDatabase){        this.appDatabase = appDatabase;    }    public List<Tag> getNotSynced(){        return appDatabase.getObjectDao().getNotSynced();    }    public LiveData<List<Tag>> getNotSyncedLiveData(){        return appDatabase.getObjectDao().getNotSyncedLiveData();    }    public DataSource.Factory<Integer, Tag> getAllMarks(){        return appDatabase.getObjectDao().getAll(SmartObject.NFC_MARK_LINKED,                SmartObject.NFC_MARK_NEW, SmartObject.NFC_MARK, SmartObject.BLE_MARK_LINKED,                SmartObject.BLE_MARK_NEW, SmartObject.BLE_MARK);    }    public void deleteAllMarks(){        appDatabase.getObjectDao().deleteAll();    }    public void bindTag(String sid, String tagId){        Executors.newSingleThreadExecutor().execute(() -> {            Tag tag = appDatabase.getObjectDao().getBySid(sid);            tag.bindTag(tagId);            insert(tag);        });    }    public void insert(@NotNull SmartObject smartObject) {        for (Value value : smartObject.getData()) {            insert(value);        }        for (Reg reg : smartObject.getList()) {            insert(reg);        }        Object object = new Object();        object.id = smartObject.getId();        object.sid = smartObject.getSid();        object.parent = smartObject.getParent();        object.type = smartObject.getType();        object.name = smartObject.getName();        object.tablet = smartObject.getTablet();        object.channel = smartObject.getChannel();        object.login = smartObject.getLogin();        object.sync = smartObject.getSync();        object.show = smartObject.getShow();        object.lastupd = smartObject.getLastupd();        object.deadin = smartObject.getDeadin();        object.ts = smartObject.getTs();        appDatabase.getObjectDao().insert(object);    }    public void insert(Object object){        appDatabase.getObjectDao().insert(object);    }    public void insert(Value value){        appDatabase.getValueDao().insert(value);    }    public void insert(Reg reg){        appDatabase.getRegDao().insert(reg);    }}